name: colcon-action
description: Simple action to build a colcon workspace

inputs:
  before-script:
    description: "Script that runs before anything else in build steps"
    required: false
    default: ''
  ccache-prefix:
    description: "CCache key prefix component (optional)"
    required: false
    default: ''
  ccache-enabled:
    description: "Enable/Disable ccache (optional)"
    required: false
    default: 'true'
  rosdep-enabled:
    description: "Indicate if rosdep should be used (optional)"
    required: false
    default: 'true'
  rosdep-install-args:
    description: "Additional args to pass to rosdep install (optional)"
    required: false
    default: '-iry'
  add-ros-ppa:
    description: "Indicate if ROS PPA should be added (optional)"
    required: false
    default: 'true'
  vcs-file:
    description: "The relative path to the vcs repos file (optional)"
    required: false
    default: ''
  upstream-args:
    description: "Additional args to pass to colcon build for upstream workspace (optional)"
    required: false
    default: ''
  target-path:
    description: "Relative path under $GITHUB_WORKSPACE where the repository was placed (optional)"
    required: false
    default: ''
  target-args:
    description: "Additional args to pass to colcon build for target workspace (optional)"
    required: false
    default: ''
  run-tests:
    description: "Indicate if tests should be run"
    required: false
    default: 'true'
  run-tests-args:
    description: "Additional args to pass to colcon test (optional)"
    required: false
    default: ''

runs:
  using: composite
  steps:

    - name: Build on Linux
      if: runner.os == 'Linux'
      uses: jenseng/dynamic-uses@v1
      env:
        # capture the ref/tag that this action was invoked at
        action_ref: ${{ github.action_ref }}
      with:
        # point at your sub-action folder + the same ref
        uses: ${{ github.repository }}/linux@${{ env.action_ref }}
        # serialize all inputs as JSON
        with: |
          {
            "before-script":       ${{ toJSON(inputs.before-script) }},
            "ccache-prefix":       ${{ toJSON(inputs.ccache-prefix) }},
            "ccache-enabled":      ${{ toJSON(inputs.ccache-enabled) }},
            "rosdep-enabled":      ${{ toJSON(inputs.rosdep-enabled) }},
            "rosdep-install-args": ${{ toJSON(inputs.rosdep-install-args) }},
            "add-ros-ppa":         ${{ toJSON(inputs.add-ros-ppa) }},
            "vcs-file":            ${{ toJSON(inputs.vcs-file) }},
            "upstream-args":       ${{ toJSON(inputs.upstream-args) }},
            "target-path":         ${{ toJSON(inputs.target-path) }},
            "target-args":         ${{ toJSON(inputs.target-args) }},
            "run-tests":           ${{ toJSON(inputs.run-tests) }},
            "run-tests-args":      ${{ toJSON(inputs.run-tests-args) }}
          }

    - name: Build on macOS
      if: runner.os == 'macOS'
      uses: jenseng/dynamic-uses@v1
      env:
        action_ref: ${{ github.action_ref }}
      with:
        uses: ${{ github.repository }}/macos@${{ env.action_ref }}
        with: |
          {
            "before-script":       ${{ toJSON(inputs.before-script) }},
            "ccache-prefix":       ${{ toJSON(inputs.ccache-prefix) }},
            "ccache-enabled":      ${{ toJSON(inputs.ccache-enabled) }},
            "rosdep-enabled":      ${{ toJSON(inputs.rosdep-enabled) }},
            "rosdep-install-args": ${{ toJSON(inputs.rosdep-install-args) }},
            "add-ros-ppa":         ${{ toJSON(inputs.add-ros-ppa) }},
            "vcs-file":            ${{ toJSON(inputs.vcs-file) }},
            "upstream-args":       ${{ toJSON(inputs.upstream-args) }},
            "target-path":         ${{ toJSON(inputs.target-path) }},
            "target-args":         ${{ toJSON(inputs.target-args) }},
            "run-tests":           ${{ toJSON(inputs.run-tests) }},
            "run-tests-args":      ${{ toJSON(inputs.run-tests-args) }}
          }

    - name: Build on Windows
      if: runner.os == 'Windows'
      uses: jenseng/dynamic-uses@v1
      env:
        action_ref: ${{ github.action_ref }}
      with:
        uses: ${{ github.repository }}/windows@${{ env.action_ref }}
        with: |
          {
            "before-script":       ${{ toJSON(inputs.before-script) }},
            "ccache-prefix":       ${{ toJSON(inputs.ccache-prefix) }},
            "ccache-enabled":      ${{ toJSON(inputs.ccache-enabled) }},
            "rosdep-enabled":      ${{ toJSON(inputs.rosdep-enabled) }},
            "rosdep-install-args": ${{ toJSON(inputs.rosdep-install-args) }},
            "add-ros-ppa":         ${{ toJSON(inputs.add-ros-ppa) }},
            "vcs-file":            ${{ toJSON(inputs.vcs-file) }},
            "upstream-args":       ${{ toJSON(inputs.upstream-args) }},
            "target-path":         ${{ toJSON(inputs.target-path) }},
            "target-args":         ${{ toJSON(inputs.target-args) }},
            "run-tests":           ${{ toJSON(inputs.run-tests) }},
            "run-tests-args":      ${{ toJSON(inputs.run-tests-args) }}
          }
